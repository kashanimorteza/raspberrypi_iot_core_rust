// Select
// ---------------------------------------------------------
mod models;
use sea_orm::{EntityTrait, Database, DbErr};
use models::zone; // generated by sea-orm-cli

#[tokio::main]
async fn main() -> Result<(), DbErr> 
{
    // Connect to database
    let db = Database::connect("postgres://postgres:123456@192.168.64.9:5432/raspberrypi").await?;

    // Select all rows
    let all_posts: Vec<zone::Model> = zone::Entity::find()
        .all(&db)
        .await?;

    // Print results
    for post in all_posts {
        println!("{:?}", post);
    }

    Ok(())
}


// // Insert
// // ---------------------------------------------------------
// mod entity; 
// use sea_orm::{EntityTrait, Database, DbErr, ActiveModelTrait, Set};
// use entity::post;

// #[tokio::main]
// async fn main() -> Result<(), DbErr> {
//     let db = Database::connect("sqlite://db.sqlite").await?;

//     // Create a new record
//     let new_post = post::ActiveModel {
//         title: Set("My first post".to_owned()),
//         text: Set("This is the body of the post".to_owned()),
//         ..Default::default() // fills the rest with defaults
//     };

//     // Insert into DB
//     let res = new_post.insert(&db).await?;

//     println!("Inserted: {:?}", res);

//     Ok(())
// }

