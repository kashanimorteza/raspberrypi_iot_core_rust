
✅ COMPLETED: Added add_sample_* methods for all models in logics using the provided values:

The following sample methods have been successfully implemented:

1. ✅ add_sample_zones() - Zone logic (already existed, confirmed working)
2. ✅ add_sample_ports() - Port logic (updated with comprehensive Raspberry Pi GPIO data)
3. ✅ add_sample_devices() - Device logic (updated with zone-specific IoT devices)
4. ✅ add_sample_device_commands() - Device command logic (updated with control commands)
5. ✅ add_sample_zone_commands() - Zone command logic (NEW FILE CREATED)
6. ✅ add_sample_zone_command_ifs() - Zone command if logic (NEW FILE CREATED)
7. ✅ add_sample_zone_command_actions() - Zone command action logic (NEW FILE CREATED)
8. ✅ add_sample_timers() - Timer logic (updated with Timer-On/Timer-Off)
9. ✅ add_sample_timer_items() - Timer item logic (NEW FILE CREATED)
10. ✅ add_sample_timer_devices() - Timer device logic (NEW FILE CREATED)
11. ✅ add_sample_timer_limits() - Timer limit logic (NEW FILE CREATED)

All files have been created/updated and the project compiles successfully.
The module declarations have been added to src/logics/mod.rs.

Original Python sample data converted to Rust below:


def zone_fill():
    print('-------------------------------------------------------------zone_fill')
    logic = logic_zone()
    obj = model_zone(name='Pool')
    print(logic.add(item=obj))
    obj = model_zone(name='Jacuzzi')
    print(logic.add(item=obj))
    obj = model_zone(name='Souna-Dry')
    print(logic.add(item=obj))
    obj = model_zone(name='Fan')
    print(logic.add(item=obj))
    obj = model_zone(name='Cold')
    print(logic.add(item=obj))
    obj = model_zone(name='Souna-Steam')
    print(logic.add(item=obj))
    obj = model_zone(name='Abnama')
    print(logic.add(item=obj))

def port_fill():
    print('-------------------------------------------------------------port_fill')
    logic = logic_port()
    print('---------None')
    obj = model_port(id=0, user_id=1, name='None',pin=0, protocol=PORT_PROTOCOLS.PWR, value=0)
    print(logic.add(item=obj))
    print('---------PWR')
    obj = model_port(user_id=1, pin=1, protocol=PORT_PROTOCOLS.PWR, value=3, name='PWR-1')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=2, protocol=PORT_PROTOCOLS.PWR, value=5, name='PWR-2')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=4, protocol=PORT_PROTOCOLS.PWR, value=5, name='PWR-3')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=17, protocol=PORT_PROTOCOLS.PWR, value=3, name='PWR-4')
    print(logic.add(item=obj))
    print('---------GND')
    obj = model_port(user_id=1, pin=6, protocol=PORT_PROTOCOLS.GND, value=0, name='GND-1')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=9, protocol=PORT_PROTOCOLS.GND, value=0, name='GND-2')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=14, protocol=PORT_PROTOCOLS.GND, value=0, name='GND-3')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=20, protocol=PORT_PROTOCOLS.GND, value=0, name='GND-4')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=25, protocol=PORT_PROTOCOLS.GND, value=0, name='GND-5')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=30, protocol=PORT_PROTOCOLS.GND, value=0, name='GND-6')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=34, protocol=PORT_PROTOCOLS.GND, value=0, name='GND-7')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=39, protocol=PORT_PROTOCOLS.GND, value=0, name='GND-8')
    print(logic.add(item=obj))
    print('---------Reserved')
    obj = model_port(user_id=1, pin=27, port=0, protocol=PORT_PROTOCOLS.RESERVED , type=PORT_TYPES.IN, value=0, name='Reserved')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=28, port=0, protocol=PORT_PROTOCOLS.RESERVED , type=PORT_TYPES.IN, value=0, name='Reserved')
    print(logic.add(item=obj))
    print('---------I2C')
    obj = model_port(user_id=1, pin=3, port=2, protocol=PORT_PROTOCOLS.I2C , type=PORT_TYPES.SDA, value=0, name='I2C-SDA')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=5, port=3, protocol=PORT_PROTOCOLS.I2C , type=PORT_TYPES.SCL, value=0, name='I2C-SCL')
    print(logic.add(item=obj))
    print('---------UART')
    obj = model_port(user_id=1, pin=8, port=0, protocol=PORT_PROTOCOLS.UART , type=PORT_TYPES.TX, value=0, name='UART-TX')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=10, port=0, protocol=PORT_PROTOCOLS.UART , type=PORT_TYPES.RX, value=0, name='UART-RX')
    print(logic.add(item=obj))
    print('---------spi 0')
    # obj = model_port(user_id=1, pin=19, port=10, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.MOSI, value=0, name='SPI0-MOSI',)
    # print(logic.add(item=obj))
    # obj = model_port(user_id=1, pin=21, port=9, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.MISO, value=0, name='SPI0-MISO')
    # print(logic.add(item=obj))
    # obj = model_port(user_id=1, pin=23, port=11, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.SCLK, value=0, name='SPI0-SCLK')
    # print(logic.add(item=obj))
    # obj = model_port(user_id=1, pin=24, port=8, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.CS0, value=0, name='SPI0-CS0')
    # print(logic.add(item=obj))
    # obj = model_port(user_id=1, pin=26, port=7, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.CS1, value=0, name='SPI0-CS1')
    # print(logic.add(item=obj))
    print('---------spi 1')
    # obj = model_port(user_id=1, pin=35, port=19, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.MISO, value=0, name='SPI1-MISO')
    # print(logic.add(item=obj))
    # obj = model_port(user_id=1, pin=36, port=16, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.CS0, value=0, name='SPI1-CS0')
    # print(logic.add(item=obj))
    # obj = model_port(user_id=1, pin=38, port=20, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.MOSI, value=0, name='SPI1-MOSI')
    # print(logic.add(item=obj))
    # obj = model_port(user_id=1, pin=40, port=21, protocol=PORT_PROTOCOLS.SPI, type=PORT_TYPES.SCLK, value=0, name='SPI1-SCLK')
    # print(logic.add(item=obj))
    print('---------gpio')
    obj = model_port(user_id=1, pin=7, port=4, protocol=PORT_PROTOCOLS.FILE , type=PORT_TYPES.IN, value=0, name='Data-1')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=11, port=17, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='P-Motor')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=12, port=18, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='P-Shir')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=13, port=27, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='P-Light')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=15, port=22, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='J-Motor')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=16, port=23, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='J-Shir')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=18, port=24, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='J-Light')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=19, port=10, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.IN, value=0, name='J-Fuse',)
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=21, port=9, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='J-Erjet')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=22, port=25, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='SD-Hiter')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=23, port=11, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='SD-Light')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=24, port=8, protocol=PORT_PROTOCOLS.GPIO, type=PORT_TYPES.OUT, value=0, name='F-Motor')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=26, port=7, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='C-Motor')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=29, port=5, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='SS-Shir')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=31, port=6, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='SS-Hiter')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=32, port=12, protocol=PORT_PROTOCOLS.GPIO , type=PORT_TYPES.OUT, value=0, name='SS-Light')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=33, port=13, protocol=PORT_PROTOCOLS.GPIO, type=PORT_TYPES.IN, value=0,  name='SS-WH')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=35, port=19, protocol=PORT_PROTOCOLS.GPIO, type=PORT_TYPES.IN, value=0, name='SS-WL')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=36, port=16, protocol=PORT_PROTOCOLS.GPIO, type=PORT_TYPES.OUT, value=0, name='SS-Esans')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=37, port=26, protocol=PORT_PROTOCOLS.GPIO, type=PORT_TYPES.OUT, value=0, name='SS-Takhlie')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=38, port=20, protocol=PORT_PROTOCOLS.GPIO, type=PORT_TYPES.OUT, value=0, name='C-Light')
    print(logic.add(item=obj))
    obj = model_port(user_id=1, pin=40, port=21, protocol=PORT_PROTOCOLS.GPIO, type=PORT_TYPES.OUT, value=0, name='Abnama')
    print(logic.add(item=obj))

def device_fill():
    print('-------------------------------------------------------------device')
    logic = logic_device()
    print('---------Pool')
    obj = model_device(zone_id=1, port_id=20, name="Motor")
    print(logic.add(item=obj))
    obj = model_device(zone_id=1, port_id=21, name="Shir")
    print(logic.add(item=obj))
    obj = model_device(zone_id=1, port_id=22, name="Light")
    print(logic.add(item=obj))
    obj = model_device(zone_id=1, port_id=19, name="Sensor", address="28-0922a03b54a4", tune=0)
    print(logic.add(item=obj))
    print('---------Jacuzzi')
    obj = model_device(zone_id=2, port_id=23, name="Motor")
    print(logic.add(item=obj))
    obj = model_device(zone_id=2, port_id=24, name="Shir")
    print(logic.add(item=obj))
    obj = model_device(zone_id=2, port_id=25, name="Light")
    print(logic.add(item=obj))
    obj = model_device(zone_id=2, port_id=26, name="Erjet-Fuse")
    print(logic.add(item=obj))
    obj = model_device(zone_id=2, port_id=27, name="Erjet-Motor")
    print(logic.add(item=obj))
    obj = model_device(zone_id=2, port_id=19, name="Sensor", address="28-00000da95214", tune=-0)
    print(logic.add(item=obj))
    print('---------Souna-Dry')
    obj = model_device(zone_id=3, port_id=28, name="Hiter")
    print(logic.add(item=obj))
    obj = model_device(zone_id=3, port_id=29, name="Light")
    print(logic.add(item=obj))
    obj = model_device(zone_id=3, port_id=19, name="Sensor", address="")
    print(logic.add(item=obj))
    print('---------Fan')
    obj = model_device(zone_id=4, port_id=30, name="Motor")
    print(logic.add(item=obj))
    obj = model_device(zone_id=4, port_id=19, name="Sensor", address="")
    print(logic.add(item=obj))
    print('---------Cold')
    obj = model_device(zone_id=5, port_id=31, name="Motor")
    print(logic.add(item=obj))
    obj = model_device(zone_id=5, port_id=39, name="Light")
    print(logic.add(item=obj))
    print('---------Souna-Steam')
    obj = model_device(zone_id=6, port_id=32, name="Shir")
    print(logic.add(item=obj))
    obj = model_device(zone_id=6, port_id=33, name="Hiter")
    print(logic.add(item=obj))
    obj = model_device(zone_id=6, port_id=34, name="Light")
    print(logic.add(item=obj))
    obj = model_device(zone_id=6, port_id=35, name="Sensor-WH")
    print(logic.add(item=obj))
    obj = model_device(zone_id=6, port_id=36, name="Sensor-WL")
    print(logic.add(item=obj))
    obj = model_device(zone_id=6, port_id=19, name="Sensor", address="28-0822a00f05d2")
    print(logic.add(item=obj))
    obj = model_device(zone_id=6, port_id=37, name="Esans")
    print(logic.add(item=obj))
    obj = model_device(zone_id=6, port_id=38, name="Takhlie")
    print(logic.add(item=obj))
    print('---------Abnama')
    obj = model_device(zone_id=7, port_id=40, name="Motor")
    print(logic.add(item=obj))

def device_command_fill():
    print('-------------------------------------------------------------device_command')
    logic = logic_device_command()
    print('---------None')
    obj = model_device_command(id=0, device_id=0, name="none", value_from=0, value_to=0, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    print('---------Pool')
    obj = model_device_command(device_id=1, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=1, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=2, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=2, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=3, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=3, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=4, name="on", value_from=0, value_to=30, type=IF_TYPES.DTU)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=4, name="off",value_from=30, value_to=1000, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=4, name="re-on",value_from=0, value_to=25, type=IF_TYPES.UTD)
    print(logic.add(item=obj))
    print('---------Jacuzzi')
    obj = model_device_command(device_id=5, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=5, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=6, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=6, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=7, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=7, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=8, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=8, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=9, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=9, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=10, name="on", value_from=0, value_to=50, type=IF_TYPES.DTU)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=10, name="off",value_from=50, value_to=1000, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=10, name="re-on",value_from=0, value_to=47, type=IF_TYPES.UTD)
    print(logic.add(item=obj))
    print('---------Souna-Dry')
    obj = model_device_command(device_id=11, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=11, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=12, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=12, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=13, name="on", value_from=0, value_to=60, type=IF_TYPES.DTU)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=13, name="off",value_from=60, value_to=1000, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=13, name="re-on",value_from=0, value_to=55, type=IF_TYPES.UTD)
    print(logic.add(item=obj))
    print('---------Fan')
    obj = model_device_command(device_id=14, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=14, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=15, name="on", value_from=100, value_to=20, type=IF_TYPES.DTU)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=15, name="off",value_from=20, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=15, name="re-on",value_from=100, value_to=23, type=IF_TYPES.UTD)
    print(logic.add(item=obj))
    print('---------Cold')
    obj = model_device_command(device_id=16, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=16, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=17, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=17, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    print('---------Souna-Steam')
    obj = model_device_command(device_id=18, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=18, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=19, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=19, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=20, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=20, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=21, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=21, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=22, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=22, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=23, name="on", value_from=0, value_to=60, type=IF_TYPES.DTU)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=23, name="off",value_from=60, value_to=1000, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=23, name="re-on",value_from=0, value_to=55, type=IF_TYPES.UTD)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=24, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=24, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=24, name="on-off",value_from=1, value_to=0, type=IF_TYPES.NONE, delay=3000, reload=True)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=25, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=25, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))
    print('---------Abnama')
    obj = model_device_command(device_id=26, name="on", value_from=1, value_to=1, type=IF_TYPES.NONE)
    print(logic.add(item=obj))
    obj = model_device_command(device_id=26, name="off",value_from=0, value_to=0, type=IF_TYPES.NONE, reload=True)
    print(logic.add(item=obj))

def zone_command_fill():
    print('-------------------------------------------------------------zone_command_fill')
    logic = logic_zone_command()
    print('---------Pool')
    obj = model_zone_command(zone_id=1, name="Shir-On")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=1, name="Shir-Off")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=1, name="Shir-ReOn")
    print(logic.add(item=obj))
    print('---------Jacuzzi')
    obj = model_zone_command(zone_id=2, name="Shir-On")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=2, name="Shir-Off")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=2, name="Shir-ReOn")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=2, name="Erjet-On")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=2, name="Erjet-Off")
    print(logic.add(item=obj))
    print('---------Souna-Dry')
    obj = model_zone_command(zone_id=3, name="Hiter-On")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=3, name="Hiter-Off")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=3, name="Hiter-ReOn")
    print(logic.add(item=obj))
    print('---------Fan')
    obj = model_zone_command(zone_id=4, name="Motor-On")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=4, name="Motor-Off")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=4, name="Motor-ReOn")
    print(logic.add(item=obj))
    print('---------Souna-Steam')
    obj = model_zone_command(zone_id=6, name="Shir-On")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=6, name="Shir-Off")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=6, name="Hiter-On")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=6, name="Hiter-Off-1")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=6, name="Hiter-Off-2")
    print(logic.add(item=obj))
    obj = model_zone_command(zone_id=6, name="Hiter-ReOn")
    print(logic.add(item=obj))

def zone_command_if_fill():
    print('-------------------------------------------------------------zone_command_if_fill')
    logic = logic_zone_command_if()
    print('----------Pool')
    print('---shir-on')
    obj = model_zone_command_if(zone_command_id=1, name="If sensor is on", device_id=4, command_id=7)
    print(logic.add(item=obj))
    print('---shir-off')
    obj = model_zone_command_if(zone_command_id=2, name="If sensor is off", device_id=4, command_id=8)
    print(logic.add(item=obj))
    print('---shir-reon')
    obj = model_zone_command_if(zone_command_id=3, name="If sensor is reon", device_id=4, command_id=9)
    print(logic.add(item=obj))
    print('----------Jacuzzi')
    print('---shir-on')
    obj = model_zone_command_if(zone_command_id=4, name="If sensor is on", device_id=10, command_id=20)
    print(logic.add(item=obj))
    print('---shir-off')
    obj = model_zone_command_if(zone_command_id=5, name="If sensor is off", device_id=10, command_id=21)
    print(logic.add(item=obj))
    print('---shir-reon')
    obj = model_zone_command_if(zone_command_id=6, name="If sensor is reon", device_id=10, command_id=22)
    print(logic.add(item=obj))
    print('---erjon')
    obj = model_zone_command_if(zone_command_id=7, name="If fuse is on", device_id=8, command_id=16)
    print(logic.add(item=obj))
    print('---erjoff')
    obj = model_zone_command_if(zone_command_id=8, name="If fuse is off", device_id=8, command_id=17)
    print(logic.add(item=obj))
    print('----------Souna-Dry')
    print('---on')
    obj = model_zone_command_if(zone_command_id=9, name="If sensor is on", device_id=13, command_id=27)
    print(logic.add(item=obj))
    print('---off')
    obj = model_zone_command_if(zone_command_id=10, name="If sensor is off", device_id=13, command_id=28)
    print(logic.add(item=obj))
    print('---reon')
    obj = model_zone_command_if(zone_command_id=11, name="If sensor is reon", device_id=13, command_id=29)
    print(logic.add(item=obj))
    print('----------Fan')
    print('---on')
    obj = model_zone_command_if(zone_command_id=12, name="If sensor is on", device_id=15, command_id=32)
    print(logic.add(item=obj))
    print('---off')
    obj = model_zone_command_if(zone_command_id=13, name="If sensor is off", device_id=15, command_id=33)
    print(logic.add(item=obj))
    print('---reon')
    obj = model_zone_command_if(zone_command_id=14, name="If sensor is reon", device_id=15, command_id=34)
    print(logic.add(item=obj))
    print('----------Souna-Steam')
    print('---shir-on')
    obj = model_zone_command_if(zone_command_id=15, name="If sensor WL is off", device_id=21, command_id=46)
    print(logic.add(item=obj))
    print('---shir-off')
    obj = model_zone_command_if(zone_command_id=16, name="If sensor WH is on", device_id=20, command_id=43)
    print(logic.add(item=obj))
    print('---hiter-on')
    obj = model_zone_command_if(zone_command_id=17, name="If sensor WL is on", device_id=21, command_id=45)
    print(logic.add(item=obj))
    obj = model_zone_command_if(zone_command_id=17, name="If sensor is on", device_id=22, command_id=47)
    print(logic.add(item=obj))
    print('---hiter-off-1')
    obj = model_zone_command_if(zone_command_id=18, name="If sensor WL is off", device_id=21, command_id=46)
    print(logic.add(item=obj))
    print('---hiter-off-2')
    obj = model_zone_command_if(zone_command_id=19, name="If sensor is off", device_id=22, command_id=48)
    print(logic.add(item=obj))
    print('---hiter-reon')
    obj = model_zone_command_if(zone_command_id=20, name="If sensor WL is on", device_id=21, command_id=45)
    print(logic.add(item=obj))
    obj = model_zone_command_if(zone_command_id=20, name="If sensor is reon", device_id=22, command_id=49)
    print(logic.add(item=obj))

def zone_command_action_fill():
    print('-------------------------------------------------------------zone_command_action_fill')
    logic = logic_zone_command_action()
    print('----------Pool')
    print('---shir-on')
    obj = model_zone_command_action(zone_command_id=1, name="Turn on shir", device_id=2, command_id=3)
    print(logic.add(item=obj))
    print('---shir-off')
    obj = model_zone_command_action(zone_command_id=2, name="Turn off shir", device_id=2, command_id=4)
    print(logic.add(item=obj))
    print('---shir-reon')
    obj = model_zone_command_action(zone_command_id=3, name="Turn on shir", device_id=2, command_id=3)
    print(logic.add(item=obj))
    print('----------Jacuzzi')
    print('---shir-on')
    obj = model_zone_command_action(zone_command_id=4, name="Turn on shir", device_id=6, command_id=12)
    print(logic.add(item=obj))
    print('---shir-off')
    obj = model_zone_command_action(zone_command_id=5, name="Turn off shir", device_id=6, command_id=13)
    print(logic.add(item=obj))
    print('---shir-reon')
    obj = model_zone_command_action(zone_command_id=6, name="Turn on shir", device_id=6, command_id=12)
    print(logic.add(item=obj))
    print('---erjon')
    obj = model_zone_command_action(zone_command_id=7, name="Turn on erjet", device_id=9, command_id=18)
    print(logic.add(item=obj))
    print('---erjoff')
    obj = model_zone_command_action(zone_command_id=8, name="Turn off erjet", device_id=9, command_id=19)
    print(logic.add(item=obj))
    print('----------Souna-Dry')
    print('---on')
    obj = model_zone_command_action(zone_command_id=9, name="Turn on hiter", device_id=11, command_id=23)
    print(logic.add(item=obj))
    print('---off')
    obj = model_zone_command_action(zone_command_id=10, name="Turn off hiter", device_id=11, command_id=24)
    print(logic.add(item=obj))
    print('---reon')
    obj = model_zone_command_action(zone_command_id=11, name="Turn on hiter", device_id=11, command_id=23)
    print(logic.add(item=obj))
    print('----------Fan')
    print('---on')
    obj = model_zone_command_action(zone_command_id=12, name="Turn on fan", device_id=14, command_id=30)
    print(logic.add(item=obj))
    print('---off')
    obj = model_zone_command_action(zone_command_id=13, name="Turn off fan", device_id=14, command_id=31)
    print(logic.add(item=obj))
    print('---reon')
    obj = model_zone_command_action(zone_command_id=14, name="Turn on fan", device_id=14, command_id=32)
    print(logic.add(item=obj))
    print('----------Souna-Steam')
    print('---shir-on')
    obj = model_zone_command_action(zone_command_id=15, name="Turn on shir", device_id=17, command_id=37)
    print(logic.add(item=obj))
    print('---shir-off')
    obj = model_zone_command_action(zone_command_id=16, name="Turn off shir", device_id=17, command_id=38)
    print(logic.add(item=obj))
    print('---hiter-on')
    obj = model_zone_command_action(zone_command_id=17, name="Turn on hitter", device_id=18, command_id=39)
    print(logic.add(item=obj))
    print('---hiter-off')
    obj = model_zone_command_action(zone_command_id=18, name="Turn off hiter", device_id=18, command_id=40)
    print(logic.add(item=obj))
    print('---hiter-off')
    obj = model_zone_command_action(zone_command_id=19, name="Turn off hiter", device_id=18, command_id=40)
    print(logic.add(item=obj))
    print('---hiter-reon')
    obj = model_zone_command_action(zone_command_id=20, name="Turn on hiter", device_id=18, command_id=39)
    print(logic.add(item=obj))

def timer_fill():
    print('-------------------------------------------------------------timer')
    logic = logic_timer()
    obj = model_timer(name='Timer-On')
    print(logic.add(item=obj))
    obj = model_timer(name='Timer-Off')
    print(logic.add(item=obj))

def timer_item_fill():
    print('-------------------------------------------------------------timer_item')
    logic = logic_timer_item()
    item_on = [
        model_timer_item(timer_id=1, name='0-1', value_from='00:00', value_to='01:00'),
        model_timer_item(timer_id=1, name='1-2', value_from='01:00', value_to='02:00'),
        model_timer_item(timer_id=1, name='6-7', value_from='06:00', value_to='07:00'),
        model_timer_item(timer_id=1, name='7-8', value_from='07:00', value_to='08:00'),
        model_timer_item(timer_id=1, name='12-13', value_from='12:00', value_to='13:00'),
        model_timer_item(timer_id=1, name='13-14', value_from='13:00', value_to='14:00'),
        model_timer_item(timer_id=1, name='22-23', value_from='22:00', value_to='23:00'),
        model_timer_item(timer_id=1, name='23-0', value_from='23:00', value_to='00:00'),
    ]
    item_off = [
        model_timer_item(timer_id=2, name='2-3', value_from='02:00', value_to='03:00'),
        model_timer_item(timer_id=2, name='3-4', value_from='03:00', value_to='04:00'),
        model_timer_item(timer_id=2, name='4-5', value_from='04:00', value_to='05:00'),
        model_timer_item(timer_id=2, name='5-6', value_from='05:00', value_to='06:00'),
        model_timer_item(timer_id=2, name='8-9', value_from='08:00', value_to='09:00'),
        model_timer_item(timer_id=2, name='9-10', value_from='09:00', value_to='10:00'),
        model_timer_item(timer_id=2, name='10-11', value_from='10:00', value_to='11:00'),
        model_timer_item(timer_id=2, name='11-12', value_from='11:00', value_to='12:00'),
        model_timer_item(timer_id=2, name='14-15', value_from='14:00', value_to='15:00'),
        model_timer_item(timer_id=2, name='15-16', value_from='15:00', value_to='16:00'),
        model_timer_item(timer_id=2, name='16-17', value_from='16:00', value_to='17:00'),
        model_timer_item(timer_id=2, name='17-18', value_from='17:00', value_to='18:00'),
        model_timer_item(timer_id=2, name='18-19', value_from='18:00', value_to='19:00'),
        model_timer_item(timer_id=2, name='19-20', value_from='19:00', value_to='20:00'),
        model_timer_item(timer_id=2, name='20-21', value_from='20:00', value_to='21:00'),
        model_timer_item(timer_id=2, name='21-22', value_from='21:00', value_to='22:00'),
    ]

    for i in item_on:
        print(logic.add(item=i))
    for i in item_off:
        print(logic.add(item=i))



    obj = model_timer_item(timer_id=1, name='00:00', value_from='00:00', value_to='01:00')
    
    obj = model_timer_item(timer_id=2, name='part-1', value_from='15:00', value_to='16:00',)
    print(logic.add(item=obj))

def timer_device_fill():
    print('-------------------------------------------------------------timer_device')
    logic = logic_timer_device()
    obj = model_timer_device(timer_id=1, device_id=1, command_id=1, enable=True)
    print(logic.add(item=obj))
    obj = model_timer_device(timer_id=2, device_id=1, command_id=2, enable=True)
    print(logic.add(item=obj))
    obj = model_timer_device(timer_id=1, device_id=5, command_id=10, enable=True)
    print(logic.add(item=obj))
    obj = model_timer_device(timer_id=2, device_id=5, command_id=11, enable=True)
    print(logic.add(item=obj))
    obj = model_timer_device(timer_id=1, device_id=16, command_id=35, enable=True)
    print(logic.add(item=obj))
    obj = model_timer_device(timer_id=2, device_id=16, command_id=36, enable=True)
    print(logic.add(item=obj))

def timer_limit_fill():
    print('-------------------------------------------------------------timer_limit')
    logic = logic_timer_limit()
    obj = model_timer_limit(device_id=9, command_from_id=18, command_to_id=19, value=1, enable=True)
    print(logic.add(item=obj))
    obj = model_timer_limit(device_id=23, command_from_id=52, command_to_id=52, value=1, enable=True)
    print(logic.add(item=obj))

