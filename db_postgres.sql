--
-- PostgreSQL database dump
--

-- Dumped from database version 17.6 (Ubuntu 17.6-1.pgdg22.04+1)
-- Dumped by pg_dump version 17.4 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: pg_database_owner
--

CREATE SCHEMA public;


ALTER SCHEMA public OWNER TO pg_database_owner;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: pg_database_owner
--

COMMENT ON SCHEMA public IS 'standard public schema';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: config; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.config (
    id integer NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    "timeZone" text DEFAULT ''::text NOT NULL,
    path_api text DEFAULT ''::text NOT NULL,
    path_gui text DEFAULT ''::text NOT NULL,
    webapi_title text DEFAULT ''::text NOT NULL,
    webapi_description text DEFAULT ''::text NOT NULL,
    webapi_version text DEFAULT ''::text NOT NULL,
    webapi_openapi_url text DEFAULT ''::text NOT NULL,
    webapi_docs_url text DEFAULT ''::text NOT NULL,
    webapi_redoc_url text DEFAULT ''::text NOT NULL,
    webapi_key text DEFAULT ''::text NOT NULL,
    webapi_host text DEFAULT ''::text NOT NULL,
    webapi_port integer DEFAULT 0,
    webapi_workers integer DEFAULT 0,
    nginx_api_host text DEFAULT ''::text NOT NULL,
    nginx_api_port integer DEFAULT 0,
    nginx_api_key text DEFAULT ''::text NOT NULL,
    nginx_gui_host text DEFAULT ''::text NOT NULL,
    nginx_gui_port integer DEFAULT 0,
    nginx_gui_key text DEFAULT ''::text NOT NULL,
    git_email text DEFAULT ''::text NOT NULL,
    git_name text DEFAULT ''::text NOT NULL,
    git_key text DEFAULT ''::text NOT NULL,
    hotspod_ssid text DEFAULT ''::text NOT NULL,
    hotspod_ip text DEFAULT ''::text NOT NULL,
    hotspod_pass text DEFAULT ''::text NOT NULL,
    wifi_ssid text DEFAULT ''::text NOT NULL,
    wifi_ip text DEFAULT ''::text NOT NULL,
    wifi_pass text DEFAULT ''::text NOT NULL,
    debug boolean DEFAULT false NOT NULL,
    log boolean DEFAULT false NOT NULL,
    "verbose" boolean DEFAULT false NOT NULL
);


ALTER TABLE public.config OWNER TO postgres;

--
-- Name: config_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.config ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: device; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.device (
    id integer NOT NULL,
    zone_id integer DEFAULT 0 NOT NULL,
    port_id integer DEFAULT 0 NOT NULL,
    power_id integer DEFAULT 0 NOT NULL,
    command_id integer DEFAULT 0 NOT NULL,
    value integer DEFAULT 0 NOT NULL,
    tune integer DEFAULT 0 NOT NULL,
    date text DEFAULT ''::text NOT NULL,
    address text DEFAULT ''::text NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.device OWNER TO postgres;

--
-- Name: device_command; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.device_command (
    id integer NOT NULL,
    device_id integer DEFAULT 0 NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    value_from integer DEFAULT 0,
    value_to integer DEFAULT 0,
    delay integer DEFAULT 0,
    description text DEFAULT ''::text NOT NULL,
    reload boolean DEFAULT false NOT NULL,
    enable boolean DEFAULT false NOT NULL,
    type text DEFAULT ''::text NOT NULL
);


ALTER TABLE public.device_command OWNER TO postgres;

--
-- Name: device_command_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.device_command ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.device_command_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: device_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.device ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.device_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.log (
    id integer NOT NULL,
    date text DEFAULT ''::text NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    status boolean DEFAULT false NOT NULL,
    data text DEFAULT ''::text NOT NULL
);


ALTER TABLE public.log OWNER TO postgres;

--
-- Name: log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: port; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.port (
    id integer NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    pin integer DEFAULT 0,
    port integer DEFAULT 0,
    value integer DEFAULT 0,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL,
    protocol text DEFAULT ''::text NOT NULL,
    type text DEFAULT ''::text NOT NULL
);


ALTER TABLE public.port OWNER TO postgres;

--
-- Name: port_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.port ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.port_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: timer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.timer (
    id integer NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.timer OWNER TO postgres;

--
-- Name: timer_device; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.timer_device (
    id integer NOT NULL,
    timer_id integer DEFAULT 0 NOT NULL,
    device_id integer DEFAULT 0 NOT NULL,
    command_id integer DEFAULT 0 NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.timer_device OWNER TO postgres;

--
-- Name: timer_device_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.timer_device ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.timer_device_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: timer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.timer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.timer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: timer_item; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.timer_item (
    id integer NOT NULL,
    timer_id integer DEFAULT 0 NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    value_from text DEFAULT ''::text NOT NULL,
    value_to text DEFAULT ''::text NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.timer_item OWNER TO postgres;

--
-- Name: timer_item_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.timer_item ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.timer_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: timer_limit; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.timer_limit (
    id integer NOT NULL,
    device_id integer DEFAULT 0 NOT NULL,
    command_from_id integer DEFAULT 0 NOT NULL,
    command_to_id integer DEFAULT 0 NOT NULL,
    value integer DEFAULT 0 NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.timer_limit OWNER TO postgres;

--
-- Name: timer_limit_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.timer_limit ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.timer_limit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."user" (
    id integer NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    username text DEFAULT ''::text NOT NULL,
    password text DEFAULT ''::text NOT NULL,
    key text DEFAULT ''::text NOT NULL,
    email text DEFAULT ''::text NOT NULL,
    phone text DEFAULT ''::text NOT NULL,
    tg_id text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public."user" OWNER TO postgres;

--
-- Name: user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."user" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: zone; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.zone (
    id integer NOT NULL,
    user_id integer DEFAULT 0 NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.zone OWNER TO postgres;

--
-- Name: zone_command; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.zone_command (
    id integer NOT NULL,
    zone_id integer DEFAULT 0 NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.zone_command OWNER TO postgres;

--
-- Name: zone_command_action; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.zone_command_action (
    id integer NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    zone_command_id integer DEFAULT 0 NOT NULL,
    device_id integer DEFAULT 0 NOT NULL,
    command_id integer DEFAULT 0,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.zone_command_action OWNER TO postgres;

--
-- Name: zone_command_action_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.zone_command_action ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.zone_command_action_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: zone_command_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.zone_command ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.zone_command_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: zone_command_if; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.zone_command_if (
    id integer NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    zone_command_id integer DEFAULT 0 NOT NULL,
    device_id integer DEFAULT 0 NOT NULL,
    command_id integer DEFAULT 0 NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    enable boolean DEFAULT false NOT NULL
);


ALTER TABLE public.zone_command_if OWNER TO postgres;

--
-- Name: zone_command_if_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.zone_command_if ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.zone_command_if_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: zone_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.zone ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.zone_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: config config_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.config
    ADD CONSTRAINT config_pkey PRIMARY KEY (id);


--
-- Name: config config_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.config
    ADD CONSTRAINT config_unique UNIQUE (name);


--
-- Name: device_command device_command_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.device_command
    ADD CONSTRAINT device_command_pkey PRIMARY KEY (id);


--
-- Name: device_command device_command_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.device_command
    ADD CONSTRAINT device_command_unique UNIQUE (device_id, name);


--
-- Name: device device_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.device
    ADD CONSTRAINT device_pkey PRIMARY KEY (id);


--
-- Name: device device_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.device
    ADD CONSTRAINT device_unique UNIQUE (zone_id, name);


--
-- Name: log log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.log
    ADD CONSTRAINT log_pkey PRIMARY KEY (id);


--
-- Name: port port_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.port
    ADD CONSTRAINT port_pkey PRIMARY KEY (id);


--
-- Name: port port_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.port
    ADD CONSTRAINT port_unique UNIQUE (user_id, name);


--
-- Name: timer_device timer_device_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timer_device
    ADD CONSTRAINT timer_device_pkey PRIMARY KEY (id);


--
-- Name: timer_device timer_device_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timer_device
    ADD CONSTRAINT timer_device_unique UNIQUE (timer_id, device_id, command_id);


--
-- Name: timer_item timer_item_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timer_item
    ADD CONSTRAINT timer_item_pkey PRIMARY KEY (id);


--
-- Name: timer_item timer_item_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timer_item
    ADD CONSTRAINT timer_item_unique UNIQUE (timer_id, name);


--
-- Name: timer_limit timer_limit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timer_limit
    ADD CONSTRAINT timer_limit_pkey PRIMARY KEY (id);


--
-- Name: timer_limit timer_limit_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timer_limit
    ADD CONSTRAINT timer_limit_unique UNIQUE (device_id, command_from_id, command_to_id);


--
-- Name: timer timer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timer
    ADD CONSTRAINT timer_pkey PRIMARY KEY (id);


--
-- Name: timer timer_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.timer
    ADD CONSTRAINT timer_unique UNIQUE (user_id, name);


--
-- Name: user user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_pkey PRIMARY KEY (id);


--
-- Name: user user_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_unique UNIQUE (name);


--
-- Name: zone_command_action zone_command_action_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.zone_command_action
    ADD CONSTRAINT zone_command_action_pkey PRIMARY KEY (id);


--
-- Name: zone_command_action zone_command_action_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.zone_command_action
    ADD CONSTRAINT zone_command_action_unique UNIQUE (zone_command_id, name);


--
-- Name: zone_command_if zone_command_if_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.zone_command_if
    ADD CONSTRAINT zone_command_if_pkey PRIMARY KEY (id);


--
-- Name: zone_command_if zone_command_if_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.zone_command_if
    ADD CONSTRAINT zone_command_if_unique UNIQUE (zone_command_id, name);


--
-- Name: zone_command zone_command_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.zone_command
    ADD CONSTRAINT zone_command_pkey PRIMARY KEY (id);


--
-- Name: zone_command zone_command_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.zone_command
    ADD CONSTRAINT zone_command_unique UNIQUE (zone_id, name);


--
-- Name: zone zone_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.zone
    ADD CONSTRAINT zone_pkey PRIMARY KEY (id);


--
-- Name: zone zone_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.zone
    ADD CONSTRAINT zone_unique UNIQUE (user_id, name);


--
-- PostgreSQL database dump complete
--

